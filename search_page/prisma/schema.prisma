// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  username     String   @unique
  passwordHash String
}

model Genre {
  id     String          @id @default(uuid())
  name   String          @unique
  movies GenresOnMovie[]
}

model Author {
  id             String           @id @default(uuid())
  name           String           @unique
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  AuthorsOnMovie AuthorsOnMovie[]
}

model Movie {
  id             String           @id @default(uuid())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  title          String           
  poster         String
  script         MovieScript[]
  genres         GenresOnMovie[]
  AuthorsOnMovie AuthorsOnMovie[]
}

model GenresOnMovie {
  genre      Genre    @relation(fields: [genreId], references: [id], onDelete: Cascade)
  genreId    String
  movie      Movie    @relation(fields: [movieId], references: [id], onDelete: Cascade)
  movieId    String
  assignedAt DateTime @default(now())

  @@id([genreId, movieId])
}

model AuthorsOnMovie {
  author    Author   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  movie     Movie    @relation(fields: [movieId], references: [id], onDelete: Cascade)
  movieId   String

  @@id([authorId, movieId])
}

model MovieScript {
  id             String           @id @default(uuid())
  movie          Movie            @relation(fields: [movieId], references: [id], onDelete: Cascade)
  movieId        String
  contents       String
}